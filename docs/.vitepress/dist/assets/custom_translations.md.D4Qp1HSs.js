import{_ as s,c as i,o as a,a2 as t}from"./chunks/framework.DlC1fzyH.js";const u=JSON.parse('{"title":"Custom Translations","description":"","frontmatter":{},"headers":[],"relativePath":"custom_translations.md","filePath":"custom_translations.md"}'),e={name:"custom_translations.md"},n=t(`<h1 id="custom-translations" tabindex="-1">Custom Translations <a class="header-anchor" href="#custom-translations" aria-label="Permalink to &quot;Custom Translations&quot;">​</a></h1><h2 id="creating-the-file" tabindex="-1">Creating the file <a class="header-anchor" href="#creating-the-file" aria-label="Permalink to &quot;Creating the file&quot;">​</a></h2><p>Localization files are JSON files, that are built from an array of objects.<br> Each JSON object contains 3 fields:<br></p><table tabindex="0"><thead><tr><th>Name</th><th style="text-align:center;">Description</th></tr></thead><tbody><tr><td>key</td><td style="text-align:center;">The key of the translation, must be unique. Required.</td></tr><tr><td>category</td><td style="text-align:center;">The category of the translation, must be in the <code>Localization.Categories</code> enum. Default: <code>NoCategory</code></td></tr><tr><td>translations</td><td style="text-align:center;">A dictionary of the translations for each language. Required.</td></tr></tbody></table><p>An example localization file can look like this:</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;key&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;custom_text&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;translations&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            &quot;English&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                &quot;text&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;hello&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            &quot;SpanishSpain&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                &quot;text&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;hola&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div><h2 id="registering-the-file" tabindex="-1">Registering the file <a class="header-anchor" href="#registering-the-file" aria-label="Permalink to &quot;Registering the file&quot;">​</a></h2><p>Registering the localization file is done by using the <code>LocalizationPatcher.RegisterLocalization</code> method in your mod&#39;s <code>Awake</code> method:</p><div class="language-cs vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cs</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">LocalizationPatcher.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">RegisterLocalization</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Identifier</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ModName&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Path</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">To</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">File.json&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">));</span></span></code></pre></div><h2 id="unique-translations" tabindex="-1">Unique translations <a class="header-anchor" href="#unique-translations" aria-label="Permalink to &quot;Unique translations&quot;">​</a></h2><p>Sometimes when adding custom content such as charms, Cuphead looks for certain keys. For a charm&#39;s name for example, it will be <code>charm_id_name</code>.<br> For a charm&#39;s subtext and description it will be <code>charm_id_subtext</code> and <code>charm_id_description</code>.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>For weapon keys it will be the same but with the <code>weapon_id</code> instead.</p></div>`,12),l=[n];function h(o,r,p,d,k,c){return a(),i("div",null,l)}const g=s(e,[["render",h]]);export{u as __pageData,g as default};
