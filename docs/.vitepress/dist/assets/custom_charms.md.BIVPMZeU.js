import{_ as s,c as a,o as i,a2 as t}from"./chunks/framework.DlC1fzyH.js";const m=JSON.parse('{"title":"Custom Charms","description":"","frontmatter":{},"headers":[],"relativePath":"custom_charms.md","filePath":"custom_charms.md"}'),e={name:"custom_charms.md"},n=t(`<h1 id="custom-charms" tabindex="-1">Custom Charms <a class="header-anchor" href="#custom-charms" aria-label="Permalink to &quot;Custom Charms&quot;">​</a></h1><h2 id="creating-the-icons" tabindex="-1">Creating the icons <a class="header-anchor" href="#creating-the-icons" aria-label="Permalink to &quot;Creating the icons&quot;">​</a></h2><div class="info custom-block"><p class="custom-block-title">INFO</p><p>This section assumes that you have a unity project set up and you know how to create asset bundles. If not, follow <a href="/asset_bundles.html">this tutorial</a>.<br> Custom Charms don&#39;t require icons, but it means that they will be blank in the equip menu.<br></p></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>In Cuphead, icons are 80x80 pixels, and included in a 3 frame animation that switches every 0.07 seconds.</p></div><ol><li>Import your icons to Unity, and add them to a sprite atlas by following <a href="https://docs.unity3d.com/2017.4/Documentation/Manual/SpriteAtlasWorkflow.html" target="_blank" rel="noreferrer">this tutorial</a>.</li><li>Put the sprite atlas in an asset bundle and press Ctrl+G to generate it.</li><li>Take the generated bundle and put it in your mod&#39;s <code>Assets</code> directory.</li></ol><h2 id="adding-the-charm" tabindex="-1">Adding the charm <a class="header-anchor" href="#adding-the-charm" aria-label="Permalink to &quot;Adding the charm&quot;">​</a></h2><p>Registering charms is done using the <code>EquipRegistries.Charms.Register</code> method.<br> Here is a base example for registering a charm:</p><div class="language-cs vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cs</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> atlasPath</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Blender:charm_icons</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">atlas&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> charmId</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;charm_shield&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Charm</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> shield</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> EquipRegistries.Charms.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Register</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(charmId, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> EquipInfo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SetAtlasPath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(atlasPath)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SetNormalIcons</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;shield0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;shield1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;shield2&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]));</span></span></code></pre></div><p>Here, <code>atlasPath</code> is the <code>ModName:BundleName\\\\asset_name</code>.<br><code>charmId</code> is the id your charm will be registered with, it must be unique.<br><code>asset_name</code> is the name of your atlas as created in Unity. And can be null if you don&#39;t want any icons, you also don&#39;t have to call <code>SetNormalIcons</code> if you don&#39;t have any.<br> Lastly, <code>SetNormalIcons</code> takes an array of the sprite names as imported to Unity.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Blender doesn&#39;t add new charm slots in the equip menu, it adds new pages to it.<br> If the player has unlocked the charm, by calling <code>PlayerData.Data.Gift</code> or by purchasing it in the shop, They can go downwards in the equip menu to reach the next page.</p></div><h2 id="making-it-useful" tabindex="-1">Making it useful <a class="header-anchor" href="#making-it-useful" aria-label="Permalink to &quot;Making it useful&quot;">​</a></h2><p>To check if the player has the charm equipped, you can use<br></p><div class="language-cs vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cs</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (PlayerData.Data.Loadouts.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">GetPlayerLoadout</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(player_id).charm </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> CHARM_INSTANCE)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    //Execute your code.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>This can be called whenever you want in <a href="/game_hooks.html">specific game events</a> to add functionality to your charm.<br><code>CHARM_INSTANCE</code> is returned by the <code>Register</code> method.</p>`,14),h=[n];function l(o,r,d,p,c,k){return i(),a("div",null,h)}const g=s(e,[["render",l]]);export{m as __pageData,g as default};
